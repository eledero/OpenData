a <- data.frame(1:10, 2:11); names(a) <- c("X1", "X2")
oneway.test(formula = X1 ~ X2, data = a)
install.packages("asbio")
library(asbio)
one.sample.z(a$X1-a$X2)
one.sample.z(a$X1-a$X2, sigma = 2)
class(one.sample.z(a$X1-a$X2, sigma = 2))
dddd <- class(one.sample.z(a$X1-a$X2, sigma = 2))
dddd[[2]]
dddd[[1]]
str(dddd)
dddd[[0]]
dddd[[]]
one.sample.z
hjk <- one.sample.z(a$X1,null.mu = b, sigma = 2)
hjk <- one.sample.z(a$X1,null.mu = 2, sigma = 2)
hjk$head
hjk$head;hjk$alternative
hjk
hjk
hjk$head; hjk$alternative; hjk$test
hjk$confidence
hjk$head; hjk$alternative; hjk$test; hjk$confidence
hjk$confidence
hjk$test;
hjk$head
hjk$alternative
class(hjk$test)
class(hjk$confidence)
hjk$confidence
hjk$confidence$ci
hjk$confidence$margin
hjk$confidence$head
hjk$confidence$ends
result <- hjk$test
result
result <- hjk$test; result <- c(result, hjk$confidence$ci)
result
result <- hjk$test; result <- data.frame(result, hjk$confidence$ci)
result
hjk$confidence$ci
result <- hjk$test
result
class(hjk$confidence$ci)
result <- hjk$test; result <- data.frame(result, as.data.frame(hjk$confidence$ci))
result
as.data.frame(hjk$confidence$ci)
result <- hjk$test; result <- data.frame(result, as.data.frame(t(hjk$confidence$ci)))
result
names(result)[3:5] <- c("Mean estimate", "Lower CI bound", "Upper CI bound")
result
hjk$test
hjk$confidence
hjk <- one.sample.z(a$X1,null.mu = 2, sigma = 2, conf = 0.95)
confidence = 0.95
sigma = 2
hjk <- one.sample.z(a$X1,null.mu = 2, sigma = sigma, conf = confidence)
result <- hjk$test; result <- data.frame(result, as.data.frame(t(hjk$confidence$ci)); confidence)
names(result)[3:5] <- c("Mean estimate", "Lower CI bound", "Upper CI bound", "Confidence")
result <- hjk$test; result <- data.frame(result, as.data.frame(t(hjk$confidence$ci)); confidence)
names(result)[3:6] <- c("Mean estimate", "Lower CI bound", "Upper CI bound", "Confidence")
result <- hjk$test; result <- data.frame(result, as.data.frame(t(hjk$confidence$ci)), confidence)
names(result)[3:6] <- c("Mean estimate", "Lower CI bound", "Upper CI bound", "Confidence")
result
result <- hjk$test; result <- data.frame(result, as.data.frame(t(hjk$confidence$ci)), paste0(confidence*100;"%")        )
names(result)[3:6] <- c("Mean estimate", "Lower CI bound", "Upper CI bound", "Confidence")
result <- hjk$test; result <- data.frame(result, as.data.frame(t(hjk$confidence$ci)), paste0(confidence*100,"%")        )
names(result)[3:6] <- c("Mean estimate", "Lower CI bound", "Upper CI bound", "Confidence")
result
?rnorm
set.seed(667)
dnorm(5)
dnorm(0)
pnorm(5)
pnorm(0)
qnorm(0.97)
qnorm(0.97, lower.tail = FALSE)
qnorm(0.97, lower.tail = FALSE)
pnorm(1, lower.tail = FALSE)
pnorm(1/0, lower.tail = FALSE)
inf
1/0
Inf
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(2)
pnorm(1)
pnorm(2) - pnorm(-2)
pnorm(3) - pnorm(-3)
alphabeta <- function(mean.sick=100, sd.sick=10, mean.healthy=130, sd.healthy=10, cutoff=120, n=10000, side="below", do.plot=TRUE) {
popsick <- rnorm(n, mean=mean.sick, sd=sd.sick)
pophealthy <- rnorm(n, mean=mean.healthy, sd=sd.healthy)
if ( side == "below" ) {
truepos <- length(popsick[popsick <= cutoff])
falsepos <- length(pophealthy[pophealthy <= cutoff])
trueneg <- length(pophealthy[pophealthy > cutoff])
falseneg <- length(popsick[popsick > cutoff])
} else if ( side == "above" ) {
truepos <- length(popsick[popsick >= cutoff])
falsepos <- length(pophealthy[pophealthy >= cutoff])
trueneg <- length(pophealthy[pophealthy < cutoff])
falseneg <- length(popsick[popsick < cutoff])
}
twotable <- matrix(c(truepos, falsepos, falseneg, trueneg), 2, 2, byrow=T)
rownames(twotable) <- c("Test positive", "Test negative")
colnames(twotable) <- c("Sick", "Healthy")
spec <- twotable[2,2]/(twotable[2,2] + twotable[1,2])
alpha <- 1 - spec
sens <- pow <- twotable[1,1]/(twotable[1,1] + twotable[2,1])
beta <- 1 - sens
pos.pred <- twotable[1,1]/(twotable[1,1] + twotable[1,2])
neg.pred <- twotable[2,2]/(twotable[2,2] + twotable[2,1])
if ( do.plot == TRUE ) {
dsick <- density(popsick)
dhealthy <- density(pophealthy)
par(mar=c(5.5, 4, 0.5, 0.5))
plot(range(c(dsick$x, dhealthy$x)), range(c(c(dsick$y, dhealthy$y))), type = "n", xlab="", ylab="", axes=FALSE)
box()
axis(1, at=mean(pophealthy), lab=substitute(mu[H[0]]~paste("=",m, sep=""), list(m=mean.healthy)), cex.axis=1.5,tck=0.02)
axis(1, at=mean(popsick), lab=substitute(mu[H[1]]~paste("=",m, sep=""), list(m=mean.sick)), cex.axis=1.5, tck=0.02)
axis(1, at=cutoff, lab=substitute(italic(paste("Cutoff=",coff, sep="")), list(coff=cutoff)), pos=-0.004, tick=FALSE, cex.axis=1.25)
lines(dhealthy, col = "steelblue", lwd=2)
if ( side == "below" ) {
polygon(c(cutoff, dhealthy$x[dhealthy$x<=cutoff], cutoff), c(0, dhealthy$y[dhealthy$x<=cutoff],0), col = "grey65")
} else if ( side == "above" ) {
polygon(c(cutoff, dhealthy$x[dhealthy$x>=cutoff], cutoff), c(0, dhealthy$y[dhealthy$x>=cutoff],0), col = "grey65")
}
lines(dsick, col = "red", lwd=2)
if ( side == "below" ) {
polygon(c(cutoff,dsick$x[dsick$x>cutoff],cutoff),c(0,dsick$y[dsick$x>cutoff],0) , col="grey90")
} else if ( side == "above" ) {
polygon(c(cutoff,dsick$x[dsick$x<=cutoff],cutoff),c(0,dsick$y[dsick$x<=cutoff],0) , col="grey90")
}
legend("topleft",
legend=(c(as.expression(substitute(alpha~paste("=", a), list(a=round(alpha,3)))),
as.expression(substitute(beta~paste("=", b), list(b=round(beta,3)))))), fill=c("grey65", "grey90"), cex=1.2, bty="n")
abline(v=mean(popsick), lty=3)
abline(v=mean(pophealthy), lty=3)
abline(v=cutoff, lty=1, lwd=1.5)
abline(h=0)
}
#list(specificity=spec, sensitivity=sens, alpha=alpha, beta=beta, power=pow, positiv.predictive=pos.pred, negative.predictive=neg.pred)
c(alpha, beta)
}
alphabeta(mean.sick=100, sd.sick=10, mean.healthy=140, sd.healthy=15, cutoff=120, n=100000, do.plot=TRUE, side="below")
q()
alphabeta <- function(mean.sick=100, sd.sick=10, mean.healthy=130, sd.healthy=10, cutoff=120, n=10000, side="below", do.plot=TRUE) {
popsick <- rnorm(n, mean=mean.sick, sd=sd.sick)
pophealthy <- rnorm(n, mean=mean.healthy, sd=sd.healthy)
if ( side == "below" ) {
truepos <- length(popsick[popsick <= cutoff])
falsepos <- length(pophealthy[pophealthy <= cutoff])
trueneg <- length(pophealthy[pophealthy > cutoff])
falseneg <- length(popsick[popsick > cutoff])
} else if ( side == "above" ) {
truepos <- length(popsick[popsick >= cutoff])
falsepos <- length(pophealthy[pophealthy >= cutoff])
trueneg <- length(pophealthy[pophealthy < cutoff])
falseneg <- length(popsick[popsick < cutoff])
}
twotable <- matrix(c(truepos, falsepos, falseneg, trueneg), 2, 2, byrow=T)
rownames(twotable) <- c("Test positive", "Test negative")
colnames(twotable) <- c("Sick", "Healthy")
spec <- twotable[2,2]/(twotable[2,2] + twotable[1,2])
alpha <- 1 - spec
sens <- pow <- twotable[1,1]/(twotable[1,1] + twotable[2,1])
beta <- 1 - sens
pos.pred <- twotable[1,1]/(twotable[1,1] + twotable[1,2])
neg.pred <- twotable[2,2]/(twotable[2,2] + twotable[2,1])
if ( do.plot == TRUE ) {
dsick <- density(popsick)
dhealthy <- density(pophealthy)
par(mar=c(5.5, 4, 0.5, 0.5))
plot(range(c(dsick$x, dhealthy$x)), range(c(c(dsick$y, dhealthy$y))), type = "n", xlab="", ylab="", axes=FALSE)
box()
axis(1, at=mean(pophealthy), lab=substitute(mu[H[0]]~paste("=",m, sep=""), list(m=mean.healthy)), cex.axis=1.5,tck=0.02)
axis(1, at=mean(popsick), lab=substitute(mu[H[1]]~paste("=",m, sep=""), list(m=mean.sick)), cex.axis=1.5, tck=0.02)
axis(1, at=cutoff, lab=substitute(italic(paste("Cutoff=",coff, sep="")), list(coff=cutoff)), pos=-0.004, tick=FALSE, cex.axis=1.25)
lines(dhealthy, col = "steelblue", lwd=2)
if ( side == "below" ) {
polygon(c(cutoff, dhealthy$x[dhealthy$x<=cutoff], cutoff), c(0, dhealthy$y[dhealthy$x<=cutoff],0), col = "grey65")
} else if ( side == "above" ) {
polygon(c(cutoff, dhealthy$x[dhealthy$x>=cutoff], cutoff), c(0, dhealthy$y[dhealthy$x>=cutoff],0), col = "grey65")
}
lines(dsick, col = "red", lwd=2)
if ( side == "below" ) {
polygon(c(cutoff,dsick$x[dsick$x>cutoff],cutoff),c(0,dsick$y[dsick$x>cutoff],0) , col="grey90")
} else if ( side == "above" ) {
polygon(c(cutoff,dsick$x[dsick$x<=cutoff],cutoff),c(0,dsick$y[dsick$x<=cutoff],0) , col="grey90")
}
legend("topleft",
legend=(c(as.expression(substitute(alpha~paste("=", a), list(a=round(alpha,3)))),
as.expression(substitute(beta~paste("=", b), list(b=round(beta,3)))))), fill=c("grey65", "grey90"), cex=1.2, bty="n")
abline(v=mean(popsick), lty=3)
abline(v=mean(pophealthy), lty=3)
abline(v=cutoff, lty=1, lwd=1.5)
abline(h=0)
}
#list(specificity=spec, sensitivity=sens, alpha=alpha, beta=beta, power=pow, positiv.predictive=pos.pred, negative.predictive=neg.pred)
c(alpha, beta)
}
alphabeta(mean.sick=100, sd.sick=10, mean.healthy=140, sd.healthy=15, cutoff=120, n=100000, do.plot=TRUE, side="below")
getwd("C:/Users/USUARIO/danny/OpenData")
setwd("C:/Users/USUARIO/danny/OpenData")
dir()
read.csv(dir(1))
dir(1)
read.csv(dir[[1]]
read.csv(dir[[1]])
read.csv(dir()[1])
read.csv(dir()[1], sep = ",")
initData <- read.csv(dir()[1], sep = ",")
initData
class(initData)
names(initData)
initData <- read.csv(dir()[1], sep = ",", header = FALSE)
initData
dir()[1]
initData <- read.csv(datosBogAbierta.csv, sep = ",")
initData <- read.csv("datosBogAbierta.csv", sep = ",")
initData
initData <- read.csv("datosBogAbierta.csv")
initData
install.packages(reshape)
install.packages("reshape")
library(reshape)
names(initData)[1] <-"col1"
initData2 <- transform(df, FOO = colsplit(col1, split = "\\,"))
initData2 <- transform(initData, FOO = colsplit(col1, split = "\\,"))
setwd("C:/Users/USUARIO/danny/OpenData")
initData <- read.csv("datosBogAbierta.csv")
initData
names(initData)
